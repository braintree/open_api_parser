openapi: 3.0.0
servers: []
info:
  title: Simple API overview
  version: '1'
paths:
  /animals:
    post:
      operationId: createAnimal
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: /components/schemas/createAnimal
      responses:
        '201':
          description: Valid create
          content:
            application/json:
              schema:
                $ref: /components/schemas/validResponse
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: /components/schemas/errorResponse
      requestBody:
        content:
          application/json:
            schema:
              $ref: /components/schemas/createAnimal
        required: true
  '/animals/{id}':
    get:
      operationId: getAnimal
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: size
          in: query
          required: false
          schema:
            type: string
            enum:
              - small
              - large
        - name: age
          in: query
          required: false
          schema:
            type: integer
        - name: tag
          in: query
          required: false
          schema:
            type: string
        - name: User-Id
          in: header
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Valid create
          content:
            application/json:
              schema:
                $ref: /components/schemas/validResponse
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: /components/schemas/errorResponse
    delete:
      operationId: deleteAnimal
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Valid create
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: /components/schemas/errorResponse
  /animals/search:
    post:
      operationId: searchAnimals
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                $ref: /components/schemas/searchResponse
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: /components/schemas/errorResponse
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
  '/people/{id}':
    get:
      operationId: getPerson
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Valid create
          content:
            application/json:
              schema:
                $ref: /components/schemas/validResponse
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: /components/schemas/errorResponse
  /headers:
    get:
      operationId: getHeaders
      responses:
        '200':
          description: Valid create
          headers:
            X-My-Header:
              schema:
                type: string
                enum:
                  - my value
          content:
            application/json:
              schema:
                $ref: /components/schemas/validResponse
components:
  schemas:
    createAnimal:
      required:
        - name
        - legs
      properties:
        name:
          type: string
        legs:
          type: integer
    validResponse:
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - ok
    searchResponse:
      required:
        - name
        - legs
      properties:
        name:
          type: string
        legs:
          type: integer
    errorResponse:
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - bad
